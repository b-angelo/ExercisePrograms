@model ExerciseProgram.Models.ViewModels.SubscriberProfileViewModel

@{
    ViewBag.Title = "";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>

<script>
    $(document).ready(function () {
        
        $("#txtWeight").keyup(function () {

            var height = $("#txtHeight").val();
            var weight = $("#txtWeight").val();
            var bmi = ((703 * weight) / Math.pow(height, 2)).toFixed(2);

            $("#txtBmi").val(bmi);

        });

        $("#txtWeight").blur(function () {

            var height = $("#txtHeight").val();
            var weight = $("#txtWeight").val();
            var bmi = ((703 * weight) / Math.pow(height, 2)).toFixed(2);


            $("#txtBmi").val(bmi);

        });
        
        $("#txtHeight").change(function () {

            var height = $("#txtHeight").val();
            var weight = $("#txtWeight").val();
            var bmi = ((703 * weight) / Math.pow(height, 2)).toFixed(2);

            $("#txtBmi").val(bmi);

        });

        $("#divWeightHistory").ready(function () {
            
            var resultsPerPage = 5;
            var currentPage = parseInt($("#currentPage").val());
            var lastPage = parseInt($(".trBmiId").length / resultsPerPage);
            var remainder = $(".trBmiId").length % resultsPerPage;

            if (remainder > 0) {
                lastPage++;
            }

            currentPage = currentPage;

            var pageXofY = "Page " + currentPage + " of " + lastPage;

            $("#txtPageXofY").val(pageXofY);

            $(".trBmiId").each(function () {
                if (this.id > 5) {
                    this.hidden = true;
                }
            });
        });

        $("#liPrevious").click(function () {

            var resultsPerPage = 5;
            var currentPage = parseInt($("#currentPage").val());
            var lastPage = parseInt($(".trBmiId").length / resultsPerPage);
            var remainder = $(".trBmiId").length % resultsPerPage;

            if (remainder > 0) {
                lastPage++;
            }

            if (currentPage <= 1) {
                return;
            }

            currentPage = currentPage - 1;

            var lowerBound = currentPage * resultsPerPage - resultsPerPage + 1;
            var upperBound = currentPage * resultsPerPage;

            var pageXofY = "Page " + currentPage + " of " + lastPage;

            $("#txtPageXofY").val(pageXofY);

            $("#currentPage").val(currentPage);

            $(".trBmiId").each(function () {
                if (this.id < lowerBound || this.id > upperBound) {
                    this.hidden = true;
                }
                else {
                    this.hidden = false;
                }
            });

        });

        $("#liNext").click(function () {

            var resultsPerPage = 5;
            var currentPage = parseInt($("#currentPage").val());
            var lastPage = parseInt($(".trBmiId").length / resultsPerPage);
            var remainder = $(".trBmiId").length % resultsPerPage;

            if (remainder > 0) {
                lastPage++;
            }

            if (currentPage >= lastPage) {
                return;
            }

            currentPage = currentPage + 1;

            var lowerBound = currentPage * resultsPerPage - resultsPerPage + 1;
            var upperBound = currentPage * resultsPerPage;

            var pageXofY = "Page " + currentPage + " of " + lastPage;

            $("#txtPageXofY").val(pageXofY);

            $("#currentPage").val(currentPage);

            $(".trBmiId").each(function () {
                if (this.id < lowerBound || this.id > upperBound) {
                    this.hidden = true;
                }
                else {
                    this.hidden = false;
                }
            });

        });

    });
</script>

@if (TempData["Saved"] != null)
{
    <div class="container">
        <div class="row margin-top-20px">
            <div class="col-sm-12">
                <div id="divSuccess" class="alert alert-success" role="alert">
                    @TempData["Saved"].ToString()
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
}

@if (TempData["Saved"]?.ToString() == "Failed")
{
    <div class="container">
        <div class="row margin-top-20px">
            <div class="col-sm-12">
                <div id="divSuccess" class="alert alert-danger" role="alert">
                    Saved
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
            </div>
        </div>
    </div>
}

<div class="container">
    <div id="divAllProgramsHeader" class="container border margin-top-20px background-white-smoke">
        <div class="row margin-top-20px">
            <div class="col-sm-offset-2 col-sm-12">
                @{
                    var profileHeader = $"{Model.FirstName}'s Profile";
                }
                <h3>
                    @profileHeader
                </h3>
                <hr />
            </div>
        </div>
        @using (Html.BeginForm("UpdateProfile", "SubscriberProfile", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-sm-offset-2 col-sm-4">
                @Html.Label("txtDateJoined", "Member Since")
                <input type="text" readonly id="DateJoinedTxt" value=@Model.DateJoined.ToShortDateString() class="form-control" />
            </div>
            <div class="col-sm-offset-2 col-sm-4">
                @Html.Label("txtDob", "Date of Birth")
                @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new
           {
               @Value = Model.DateOfBirth.Value.ToString("yyyy-MM-dd"),
               @class = "form-control", id = "txtDob", @type = "date"
           } })
            </div>
            <div class="col-sm-offset-2 col-sm-4">
                @Html.Label("lblEmail", "Email Address")
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control", id = "txtEmailAddress", @type = "email" } })
            </div>
        </div>
            <div class="row">
                <div class="col-sm-offset-2 col-sm-4">
                    @{
                        var heightDic = new Dictionary<int, string>();

                        for (var i = 7; i > 3; i--)
                        {
                            for (var j = 11; j > 0; j--)
                            {
                                heightDic.Add((i * 12) + j, $"{i}'{j}''");
                            }
                        }

                        var selectList = new SelectList(heightDic, "Key", "Value", Model.Height);
                    }
                    @Html.Label("lblHeight", "Height") <br />
                    @Html.DropDownListFor(model => model.Height, selectList, new { @class = "form-control", id = "txtHeight" })
                </div>
                <div class="col-sm-offset-2 col-sm-4">
                    @Html.Label("lblWeight", "Weight (lbs)")
                    @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control", id = "txtWeight" } })
                </div>
                <div class="col-sm-offset-2 col-sm-4">
                    @Html.Label("lblBmi", "BMI")
                    <input type="text" readonly id="txtBmi" value=@Model.BodyMassIndex class="form-control" />
                </div>
            </div>
            <div class="row margin-bottom-20px">
                <div class="col-sm-offset-2 col-sm-12">
                    <hr />
                    @*<input type="submit" name="btnDeleteWeight" value="X" formaction=@Url.Action("DeleteUserWeightEntry",  new { id = item.Id }) formmethod="post" class="btn btn-sm btn-danger" />*@
                    <input type="submit" id="btnUpdateProfile" formaction=@Url.Action("UpdateProfile") formmethod="post" value="Update Profile" class="btn btn-sm btn-primary" />
                </div>
            </div>
        }
    </div>
</div>

@{
    if (Model.WeightHistory.Any())
    {
        <div class="container">
            <div id="divWeightHistory" class="container border margin-top-20px background-white-smoke">
                <div class="row margin-top-20px margin-bottom-20px">
                    <div class="col">
                        <h4>Weight History</h4>
                        <hr />
                    </div>
                </div>
                <div class="row margin-top-20px margin-bottom-20px">
                    <div class="col">
                        @using (Html.BeginForm())
                        {
                            <table class="table table-hover table-sm">
                                <thead class="thead-dark table">
                                    <tr>
                                        <th>
                                            Week Of
                                        </th>
                                        <th>
                                            Weight
                                        </th>
                                        <th>
                                            Delete
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        var bmiId = 1;
                                    }
                                    @foreach (var item in Model?.WeightHistory)
                                    {
                                        <tr class="trBmiId" id=@bmiId>
                                            <td>
                                                @item.CreateDate.ToString("MM/dd/yy")
                                            </td>
                                            <td>
                                                @item.WeightInPounds
                                            </td>
                                            <td>
                                                <button name="btnDeleteWeight" class="btn btn-sm" value="delete" formaction=@Url.Action("DeleteUserWeightEntry",  new { id = item.Id }) formmethod="post">&#x274C;</button>
                                            </td>
                                        </tr>
                                        bmiId++;
                                    }
                                </tbody>
                                <tfoot>
                                </tfoot>
                            </table>
                        }
                        <span style="cursor:pointer;" class="btn-sm btn-secondary" id="liPrevious">&laquo;</span>
                        <input id="txtPageXofY" readonly class="input-pageXofY" value="Page 1 of 2" />
                        <span style="cursor:pointer;" class="btn-sm btn-secondary" id="liNext">&raquo;</span> <br /> <br />
                        <input id="currentPage" hidden="hidden" value="1" />
                    </div>
                </div>
            </div>
        </div>
    }
}